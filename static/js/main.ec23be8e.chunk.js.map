{"version":3,"sources":["utils.tsx","component/ShapeSwitcher.tsx","component/CodeSnippet.tsx","component/Slider.tsx","component/Configurator.tsx","component/Preview.tsx","App.tsx","index.tsx"],"names":["createShades","col","amt","hex","String","replace","length","c","i","rgb","parseInt","substr","Math","round","min","max","toString","MemoShapeSwitcher","React","memo","shape","setShape","className","onClick","data-shape","name","title","viewBox","fill","stroke","xmlns","d","strokeWidth","MemoCodeSnippet","radius","background","intensity","blur","dist","bgColor","split","MemoSlider","value","onChange","step","px","htmlFor","id","type","e","Number","target","MemoConfigurator","angle","inputRef","useRef","useState","size","setSize","setRadius","setDist","setIntensity","setBlur","setBackground","setBgHandler","color","test","useEffect","bgFirst","bgSecond","current","positionX","positionY","positionXOpposite","positionYOpposite","angleDeg","getShadowSide","document","documentElement","style","cssText","hexChar","charAt","getFontColor","nDist","nSize","floor","ref","Preview","setAngle","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec23be8e.chunk.js","sourcesContent":["export const isValidColor = (hex: string) => /^#[0-9A-F]{6}$/i.test(hex);\r\n\r\nexport function createShades(col: string, amt: number): string {\r\n  let hex: string = String(col).replace(/[^0-9a-f]/gi, '');\r\n  if (hex.length < 6) {\r\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n  }\r\n  var rgb = '#',\r\n    c,\r\n    i;\r\n  for (i = 0; i < 3; i++) {\r\n    c = parseInt(hex.substr(i * 2, 2), 16);\r\n    c = Math.round(Math.min(Math.max(0, c + c * amt), 255)).toString(16);\r\n    rgb += ('00' + c).substr(c.length);\r\n  }\r\n  return rgb;\r\n}\r\n\r\nexport function getFontColor(hex: string): string {\r\n  const hexChar = hex.toString().charAt(1);\r\n  if (hexChar === '1' || hexChar === '0') {\r\n    return '#fffff';\r\n  } else if (hexChar === 'f' || hexChar === 'e' || hexChar === 'd') {\r\n    return '#00000';\r\n  } else {\r\n    return createShades(hex, 0.7);\r\n  }\r\n}\r\ninterface getShadowSideReturn {\r\n  positionX: number;\r\n  positionY: number;\r\n  positionXOpposite: number;\r\n  positionYOpposite: number;\r\n  angleDeg: string;\r\n}\r\nexport function getShadowSide(\r\n  dist: number,\r\n  angle: number,\r\n): getShadowSideReturn {\r\n  switch (angle) {\r\n    default:\r\n    case 0:\r\n      return {\r\n        positionX: dist,\r\n        positionY: dist,\r\n        positionXOpposite: dist * -1,\r\n        positionYOpposite: dist * -1,\r\n        angleDeg: '145deg',\r\n      };\r\n    case 1:\r\n      return {\r\n        positionX: dist * -1,\r\n        positionY: dist,\r\n        positionXOpposite: dist,\r\n        positionYOpposite: dist * -1,\r\n        angleDeg: '225deg',\r\n      };\r\n    case 2:\r\n      return {\r\n        positionX: dist * -1,\r\n        positionY: dist * -1,\r\n        positionXOpposite: dist,\r\n        positionYOpposite: dist,\r\n        angleDeg: '315deg',\r\n      };\r\n    case 3:\r\n      return {\r\n        positionX: dist,\r\n        positionY: dist * -1,\r\n        positionXOpposite: dist * -1,\r\n        positionYOpposite: dist,\r\n        angleDeg: '45deg',\r\n      };\r\n  }\r\n}\r\n","import React from 'react';\r\ninterface ShapeSwitcherProps {\r\n  shape: number;\r\n  setShape: (param: number) => void;\r\n}\r\nexport default function ShapeSwitcher({ shape, setShape }: ShapeSwitcherProps) {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"shape-switch\">\r\n        <button\r\n          className={shape === 0 ? 'active' : ''}\r\n          onClick={() => setShape(0)}\r\n          data-shape=\"0\"\r\n          name=\"flat\"\r\n          title=\"Flat\">\r\n          <svg\r\n            viewBox=\"0 0 145 24\"\r\n            fill=\"none\"\r\n            stroke=\"white\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M0 22H7C15.2843 22 22 15.2843 22 7.00001V3C22 2.44772 22.4477 2 23 2H121C121.552 2 122 2.44772 122 3V7.00001C122 15.2843 128.716 22 137 22H145\"\r\n              stroke=\"inherit\"\r\n              strokeWidth=\"6\"></path>\r\n          </svg>\r\n        </button>\r\n        <button\r\n          className={shape === 1 ? 'active' : ''}\r\n          onClick={() => setShape(1)}\r\n          data-shape=\"1\"\r\n          name=\"pressed\"\r\n          title=\"Pressed\">\r\n          <svg\r\n            viewBox=\"0 0 145 24\"\r\n            fill=\"none\"\r\n            stroke=\"white\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M0 2H22V21C22 21.5523 22.4477 22 23 22H121C121.552 22 122 21.5523 122 21V2H145\"\r\n              stroke=\"inherit\"\r\n              strokeWidth=\"6\"></path>\r\n          </svg>\r\n        </button>\r\n\r\n        <button\r\n          className={shape === 2 ? 'active' : ''}\r\n          onClick={() => setShape(2)}\r\n          data-shape=\"2\"\r\n          name=\"concave\"\r\n          title=\"Concave\">\r\n          <svg\r\n            viewBox=\"0 0 145 24\"\r\n            fill=\"none\"\r\n            stroke=\"white\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M0 22H7C15.2843 22 22 15.2843 22 7.00001V3.39336C22 2.7091 22.6808 2.2299 23.3304 2.44485C59.2066 14.3156 85.7767 12.9047 120.7 2.39438C121.343 2.20072 122 2.67921 122 3.3512V7.00001C122 15.2843 128.716 22 137 22H145\"\r\n              stroke=\"inherit\"\r\n              strokeWidth=\"6\"></path>\r\n          </svg>\r\n        </button>\r\n        <button\r\n          className={shape === 3 ? 'active' : ''}\r\n          onClick={() => setShape(3)}\r\n          data-shape=\"3\"\r\n          name=\"convex\"\r\n          title=\"Convex\">\r\n          <svg\r\n            viewBox=\"0 0 145 33\"\r\n            fill=\"none\"\r\n            stroke=\"white\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path\r\n              d=\"M0 31H7C15.2843 31 22 24.2843 22 16V11.7329C22 11.2966 22.2898 10.9083 22.7061 10.7779C60.0722 -0.924818 84.913 -0.925978 121.302 10.7745C121.714 10.9071 122 11.2935 122 11.727V16C122 24.2843 128.716 31 137 31H145\"\r\n              stroke=\"inherit\"\r\n              strokeWidth=\"6\"></path>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const MemoShapeSwitcher = React.memo(ShapeSwitcher);\r\n","import React from 'react';\r\nimport { createShades } from '../utils';\r\n\r\ninterface CodeSnippetProps {\r\n  radius: number;\r\n  shape: number;\r\n  background: string;\r\n  intensity: number;\r\n  blur: number;\r\n  dist: number;\r\n}\r\n\r\nexport default function CodeSnippet({\r\n  radius,\r\n  shape,\r\n  background,\r\n  intensity,\r\n  blur,\r\n  dist,\r\n}: CodeSnippetProps) {\r\n\r\n  function bgColor(shape: number): string {\r\n    switch (shape) {\r\n      default:\r\n      case 3:\r\n      case 0:\r\n        return background;\r\n      case 1:\r\n        return `linear-gradient(145deg, ${createShades(background,0.1 * -1,)}, ${createShades(background, 0.1)});`;\r\n      case 2:\r\n        return `linear-gradient(145deg, ${createShades(background,0.1,)}, ${createShades(background, 0.1 * -1)});`;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"code neu\">\r\n      <span>border-radius: </span> {radius}px;\r\n      <br />\r\n      <span>background: </span> {bgColor(shape)}\r\n      <br />\r\n      <span>box-shadow:</span> {shape === 3 && 'inset'} {dist}px {dist}px {blur}px {createShades(background, intensity * -1).split('-')[0]},\r\n      <br />\r\n      {shape === 3 && 'inset'} -{dist}px -{dist}px {blur}px {createShades(background, intensity).split('-')[0]};\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const MemoCodeSnippet = React.memo(CodeSnippet)","import React from 'react';\r\n\r\ninterface SliderProps {\r\n  title: string;\r\n  value: any;\r\n  onChange: (n: number) => void;\r\n  min: number;\r\n  max: number;\r\n  step?: number;\r\n  px?: boolean;\r\n}\r\n\r\nexport default function Slider({\r\n  title,\r\n  value,\r\n  onChange,\r\n  min,\r\n  max,\r\n  step = 1,\r\n  px = true,\r\n}: SliderProps) {\r\n  return (\r\n    <>\r\n      <label className=\"lbl\" htmlFor=\"size\">\r\n        {title}\r\n      </label>\r\n      <input\r\n        className=\"slider\"\r\n        id={title}\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        value={value}\r\n        onChange={(e) => onChange(Number(e.target.value))}></input>\r\n      <span className=\"stat\">\r\n        {value} {px && 'px'}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const MemoSlider = React.memo(Slider);\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  createShades,\r\n  getFontColor,\r\n  getShadowSide,\r\n  isValidColor,\r\n} from '../utils';\r\nimport { MemoShapeSwitcher } from './ShapeSwitcher';\r\nimport { MemoCodeSnippet } from './CodeSnippet';\r\nimport { MemoSlider } from './Slider';\r\n\r\ninterface Props {\r\n  angle: number;\r\n  shape: number;\r\n  setShape: (value: number) => void;\r\n}\r\nexport function Configurator({ angle, shape, setShape }: Props) {\r\n  const inputRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n  const [size, setSize] = useState(300);\r\n  const [radius, setRadius] = useState(50);\r\n  const [dist, setDist] = useState(20);\r\n  const [intensity, setIntensity] = useState(0.15);\r\n  const [blur, setBlur] = useState(60);\r\n  const [background, setBackground] = useState('#efeeee');\r\n\r\n  useEffect(() => {\r\n    inputRef.current.value = background;\r\n    var bgFirst, bgSecond;\r\n    if (shape === 0) {\r\n      bgFirst = background;\r\n      bgSecond = background;\r\n    } else if (shape === 1) {\r\n      bgFirst = createShades(background, 0.1 * -1);\r\n      bgSecond = createShades(background, 0.1);\r\n    } else if (shape === 2) {\r\n      bgFirst = createShades(background, 0.1);\r\n      bgSecond = createShades(background, 0.1 * -1);\r\n    }\r\n\r\n    const {\r\n      positionX,\r\n      positionY,\r\n      positionXOpposite,\r\n      positionYOpposite,\r\n      angleDeg,\r\n    } = getShadowSide(dist, angle);\r\n    document.documentElement.style.cssText = `\r\n    --background: ${background};\r\n    --backgroundFirst: ${bgFirst};\r\n    --backgroundSecond: ${bgSecond};\r\n    --blur: ${blur}px;\r\n    --angle: ${angleDeg};\r\n    --positionX: ${positionX}px;\r\n    --positionY: ${positionY}px;\r\n    --positionXOpposite: ${positionXOpposite}px;\r\n    --positionYOpposite: ${positionYOpposite}px;\r\n    --size: ${size}px;\r\n    --radius:${radius}px;\r\n    --intensityL: ${createShades(background, intensity)};\r\n    --intensityD: ${createShades(background, intensity * -1)};\r\n    --intensityS: ${createShades(background, (intensity - 0.7) * -1)};\r\n    --intensityB: ${createShades(background, intensity - 0.15)};\r\n    --intensityBaa: ${getFontColor(background)}\r\n    `;\r\n  }, [background, dist, intensity, blur, shape, size, radius, angle, inputRef]);\r\n\r\n  function setBgHandler(color: string) {\r\n    if (isValidColor(color)) {\r\n      setBackground(color);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let nDist = dist * 2;\r\n    if (nDist >= 5 && nDist <= 50) setBlur(nDist);\r\n  }, [dist, setBlur]);\r\n\r\n  useEffect(() => {\r\n    let nSize = Math.floor(size / 10);\r\n    if (nSize >= 5 && nSize <= 50) setDist(nSize);\r\n  }, [size, setDist]);\r\n\r\n  return (\r\n    <div className=\"conf\">\r\n      <div className=\"row\">\r\n        <label htmlFor=\"head\">Color</label>\r\n        <span></span>\r\n        <input\r\n          type=\"color\"\r\n          id=\"head\"\r\n          name=\"head\"\r\n          value={background}\r\n          onChange={(e) => setBgHandler(e.target.value)}></input>\r\n        <input\r\n          type=\"text\"\r\n          id=\"head\"\r\n          name=\"head\"\r\n          ref={inputRef}\r\n          onChange={(e) => setBgHandler(e.target.value)}></input>\r\n      </div>\r\n      <div className=\"row\">\r\n        <MemoSlider\r\n          title=\"size\"\r\n          value={size}\r\n          onChange={setSize}\r\n          min={10}\r\n          max={400}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <MemoSlider\r\n          title=\"radius\"\r\n          value={radius}\r\n          onChange={setRadius}\r\n          min={0}\r\n          max={size / 2}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <MemoSlider\r\n          title=\"distance\"\r\n          value={dist}\r\n          onChange={setDist}\r\n          min={5}\r\n          max={50}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <MemoSlider\r\n          title=\"strength\"\r\n          value={intensity}\r\n          onChange={setIntensity}\r\n          step={0.01}\r\n          min={0.01}\r\n          max={0.6}\r\n          px={false}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <MemoSlider\r\n          title=\"blur\"\r\n          value={blur}\r\n          onChange={setBlur}\r\n          min={0}\r\n          max={100}\r\n        />\r\n      </div>\r\n\r\n      <MemoShapeSwitcher shape={shape} setShape={setShape} />\r\n\r\n      <MemoCodeSnippet\r\n        radius={radius}\r\n        shape={shape}\r\n        background={background}\r\n        intensity={intensity}\r\n        blur={blur}\r\n        dist={dist}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const MemoConfigurator = React.memo(Configurator);\r\n","import React from 'react';\r\nimport './Preview.css';\r\n\r\ninterface Props {\r\n  shape: number;\r\n  angle: number;\r\n  setAngle: (n: number) => void;\r\n}\r\n\r\nexport function Preview({ shape, angle, setAngle }: Props) {\r\n  return (\r\n    <div className=\"preview\">\r\n      <button\r\n        className={`leftU${angle === 0 ? ' activeA' : ''}`}\r\n        onClick={() => setAngle(0)}></button>\r\n      <button\r\n        className={`rightU${angle === 1 ? ' activeA' : ''}`}\r\n        onClick={() => setAngle(1)}></button>\r\n      <button\r\n        className={`rightD${angle === 2 ? ' activeA' : ''}`}\r\n        onClick={() => setAngle(2)}></button>\r\n      <button\r\n        className={`leftD${angle === 3 ? ' activeA' : ''}`}\r\n        onClick={() => setAngle(3)}></button>\r\n      <div className={`box${shape === 3 ? ' pressed' : ''}`}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { MemoConfigurator } from './component/Configurator';\r\nimport { Preview } from './component/Preview';\r\n\r\nfunction App() {\r\n  const [angle, setAngle] = useState(0);\r\n  const [shape, setShape] = useState(0);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MemoConfigurator angle={angle} shape={shape} setShape={setShape} />\r\n      <Preview shape={shape} angle={angle} setAngle={setAngle} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}